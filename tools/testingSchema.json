{
  "$ref": "#/definitions/Spec",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "AggregateExpression": {
      "additionalProperties": false,
      "description": "A custom SQL aggregate expression.",
      "properties": {
        "agg": {
          "description": "A SQL expression string to calculate an aggregate value. Embedded Param references, such as `SUM($param + 1)`, are supported. For expressions without aggregate functions, use *sql* instead.",
          "type": "string"
        },
        "label": {
          "description": "A label for this expression, for example to label a plot axis.",
          "type": "string"
        }
      },
      "required": ["agg"],
      "type": "object"
    },
    "AggregateTransform": {
      "anyOf": [
        {
          "$ref": "#/definitions/Argmax"
        },
        {
          "$ref": "#/definitions/Argmin"
        },
        {
          "$ref": "#/definitions/Avg"
        },
        {
          "$ref": "#/definitions/Count"
        },
        {
          "$ref": "#/definitions/Max"
        },
        {
          "$ref": "#/definitions/Min"
        },
        {
          "$ref": "#/definitions/First"
        },
        {
          "$ref": "#/definitions/Last"
        },
        {
          "$ref": "#/definitions/Median"
        },
        {
          "$ref": "#/definitions/Mode"
        },
        {
          "$ref": "#/definitions/Product"
        },
        {
          "$ref": "#/definitions/Quantile"
        },
        {
          "$ref": "#/definitions/Stddev"
        },
        {
          "$ref": "#/definitions/StddevPop"
        },
        {
          "$ref": "#/definitions/Sum"
        },
        {
          "$ref": "#/definitions/Variance"
        },
        {
          "$ref": "#/definitions/VarPop"
        }
      ],
      "description": "An aggregate transform that combines multiple values."
    },
    "Argmax": {
      "additionalProperties": false,
      "properties": {
        "argmax": {
          "description": "Find a value of the first column that maximizes the second column.",
          "items": {
            "description": "A transform argument.",
            "type": [
              "string",
              "number",
              "boolean"
            ]
          },
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "distinct": {
          "type": "boolean"
        },
        "orderby": {
          "anyOf": [
            {
              "$ref": "#/definitions/TransformField"
            },
            {
              "items": {
                "$ref": "#/definitions/TransformField"
              },
              "type": "array"
            }
          ]
        },
        "partitionby": {
          "anyOf": [
            {
              "$ref": "#/definitions/TransformField"
            },
            {
              "items": {
                "$ref": "#/definitions/TransformField"
              },
              "type": "array"
            }
          ]
        },
        "range": {
          "anyOf": [
            {
              "items": {
                "type": [
                  "number",
                  "null"
                ]
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/ParamRef"
            }
          ]
        },
        "rows": {
          "anyOf": [
            {
              "items": {
                "type": [
                  "number",
                  "null"
                ]
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/ParamRef"
            }
          ]
        }
      },
      "required": [
        "argmax"
      ],
      "type": "object"
    },
    "Argmin": {
      "additionalProperties": false,
      "properties": {
        "argmin": {
          "description": "Find a value of the first column that minimizes the second column.",
          "items": {
            "description": "A transform argument.",
            "type": [
              "string",
              "number",
              "boolean"
            ]
          },
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "distinct": {
          "type": "boolean"
        },
        "orderby": {
          "anyOf": [
            {
              "$ref": "#/definitions/TransformField"
            },
            {
              "items": {
                "$ref": "#/definitions/TransformField"
              },
              "type": "array"
            }
          ]
        },
        "partitionby": {
          "anyOf": [
            {
              "$ref": "#/definitions/TransformField"
            },
            {
              "items": {
                "$ref": "#/definitions/TransformField"
              },
              "type": "array"
            }
          ]
        },
        "range": {
          "anyOf": [
            {
              "items": {
                "type": [
                  "number",
                  "null"
                ]
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/ParamRef"
            }
          ]
        },
        "rows": {
          "anyOf": [
            {
              "items": {
                "type": [
                  "number",
                  "null"
                ]
              },
              "type": "array"
            },
            {
              "$ref": "#/definitions/ParamRef"
            }
          ]
        }
      },
      "required": [
        "argmin"
      ],
      "type": "object"
    }, "TransformField": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "$ref": "#/definitions/ParamRef"
        }
      ],
      "description": "A field argument to a data transform."
    }, 
    "ParamRef": {
      "type": "string"
    }
  }
}
